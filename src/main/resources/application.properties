server.port=8082

# Data source
##spring.jpa.database = POSTGRESQL
##spring.datasource.platform = postgres
 
# Indica el driver/lib para conectar java a Postgres
#spring.datasource.driver-class-name = org.postgresql.Driver

# Url donde esta el servicio de tu mysql y el nombre de la base de datos
#spring.datasource.url = jdbc:postgresql://127.0.0.1:5433/reporte-almacen

# Usuario y contrasena para tu base de datos descrita en la linea anterior
#spring.datasource.username = postgres
#spring.datasource.password = root

# [Opcional] Imprime en tu consola las instrucciones hechas en tu base de datos
spring.jpa.show-sql = true

# Crea las tablas [Opcional] (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Otros
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.generate_statistics = false
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true
spring.jpa.generate-ddl = true
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n



spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
 
spring.application.name=Reportes

spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:bootapp;DB_CLOSE_DELAY=-1
spring.datasource.url=jdbc:h2:file:C:/data/sample
#spring.datasource.url=jdbc:h2:file:E:/desarrollo/auto-estudio/reporte-almacen
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enabling H2 Console
spring.h2.console.enabled=true
 
# Custom H2 Console URL
spring.h2.console.path=/h2